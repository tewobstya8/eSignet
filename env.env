NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_cGlja2VkLWJhc3MtNDAuY2xlcmsuYWNjb3VudHMuZGV2JA
CLERK_SECRET_KEY=sk_test_V9wNocNUYONCneja4LxIs0QriY1wS9xLqIlvak8lib


NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up





# eSignet RP Credentials (Obtained from eSignet Admin)
ESIGNET_CLIENT_ID=your_client_id_here
ESIGNET_CLIENT_SECRET=your_client_secret_here # KEEP SECRET

# eSignet IDP Endpoints (Obtained from eSignet Admin/Discovery Document)
ESIGNET_AUTH_URL=https://your-esignet-idp.com/authorize
ESIGNET_TOKEN_URL=https://your-esignet-idp.com/token
ESIGNET_USERINFO_URL=https://your-esignet-idp.com/userinfo
# ESIGNET_JWKS_URL=https://your-esignet-idp.com/jwks # Needed if you want to validate ID Tokens locally

# Your Application's Redirect URI (Must be registered with eSignet)
# This will be an API route or page in your Next.js app
ESIGNET_REDIRECT_URI=http://localhost:3000/api/auth/callback/esignet # Or whatever your development URL is

# PostgreSQL Database Configuration
DATABASE_URL=mysql://root:1234ANDYsamson+@localhost:3306/esignettest


# eSignet RP Credentials (Client-side Safe)
NEXT_PUBLIC_ESIGNET_CLIENT_ID=your_client_id_here

# eSignet IDP Endpoints (Client-side Safe)
NEXT_PUBLIC_ESIGNET_AUTH_URL=https://your-esignet-idp.com/authorize
NEXT_PUBLIC_ESIGNET_REDIRECT_URI=http://localhost:3000/api/auth/callback/esignet # Must match server-side counterpart